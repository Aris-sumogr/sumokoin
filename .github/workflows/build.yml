name: continuous-integration/gh-actions/cli

on: [push, pull_request]

jobs:
  build-macos:
    runs-on: macOS-latest
    env:
      CCACHE_COMPRESS: 1
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: ccache
      uses: actions/cache@v1
      with:
        path: ~/.ccache
        key: ccache-macos-build-${{ github.sha }}
        restore-keys: ccache-macos-build-
    - name: update brew and install dependencies
      run: brew update && brew install boost hidapi zmq libpgm miniupnpc ldns expat libunwind-headers protobuf ccache
    - name: build
      run: |
        ccache --max-size=100M
        make -j3

  build-windows:
    runs-on: windows-latest
    env:
      CCACHE_COMPRESS: 1
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - uses: numworks/setup-msys2@v1
    - name: ccache
      uses: actions/cache@v1
      with:
        path: ~/.ccache
        key: ccache-windows-build-${{ github.sha }}
        restore-keys: ccache-windows-build-
    - name: update pacman
      run: msys2do pacman -Syu --noconfirm
    - name: install monero dependencies
      run: msys2do pacman -S --noconfirm mingw-w64-x86_64-toolchain make mingw-w64-x86_64-cmake mingw-w64-x86_64-boost mingw-w64-x86_64-openssl mingw-w64-x86_64-zeromq mingw-w64-x86_64-libsodium mingw-w64-x86_64-hidapi mingw-w64-x86_64-protobuf-c mingw-w64-x86_64-libusb git mingw-w64-x86_64-ccache
    - name: build
      run: |
        msys2do ccache --max-size=100M
        msys2do make release-static-win64 -j2

  build-ubuntu:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPRESS: 1
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: ccache
      uses: actions/cache@v1
      with:
        path: ~/.ccache
        key: ccache-ubuntu-build-${{ github.sha }}
        restore-keys: |
          ccache-ubuntu-build-
          ccache-ubuntu-
    - name: remove bundled boost
      run: sudo rm -rf /usr/local/share/boost
    - name: update apt
      run: sudo apt update
    - name: install monero dependencies
      run: sudo apt -y install build-essential cmake libboost-all-dev miniupnpc libunbound-dev graphviz doxygen libunwind8-dev pkg-config libssl-dev libzmq3-dev libsodium-dev libhidapi-dev libnorm-dev libusb-1.0-0-dev libpgm-dev ccache
    - name: build
      run: |
        ccache --max-size=100M
        make -j3

  libwallet-ubuntu:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPRESS: 1
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: ccache
      uses: actions/cache@v1
      with:
        path: ~/.ccache
        key: ccache-ubuntu-libwallet-${{ github.sha }}
        restore-keys: |
          ccache-ubuntu-libwallet-
          ccache-ubuntu-
    - name: remove bundled boost
      run: sudo rm -rf /usr/local/share/boost
    - name: update apt
      run: sudo apt update
    - name: install monero dependencies
      run: sudo apt -y install build-essential cmake libboost-all-dev miniupnpc libunbound-dev graphviz doxygen libunwind8-dev pkg-config libssl-dev libzmq3-dev libsodium-dev libhidapi-dev libnorm-dev libusb-1.0-0-dev libpgm-dev ccache
    - name: build
      run: |
        ccache --max-size=100M
        cmake -DBUILD_GUI_DEPS=ON
        make -j3

  test-ubuntu:
    needs: build-ubuntu
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPRESS: 1
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: ccache
      uses: actions/cache@v1
      with:
        path: ~/.ccache
        key: ccache-ubuntu-test-${{ github.sha }}
        restore-keys: |
          ccache-ubuntu-test-
          ccache-ubuntu-
    - name: remove bundled boost
      run: sudo rm -rf /usr/local/share/boost
    - name: update apt
      run: sudo apt update
    - name: install monero dependencies
      run: sudo apt -y install build-essential cmake libboost-all-dev miniupnpc libunbound-dev graphviz doxygen libunwind8-dev pkg-config libssl-dev libzmq3-dev libsodium-dev libhidapi-dev libnorm-dev libusb-1.0-0-dev libpgm-dev ccache
    - name: install requests
      run: pip install requests
    - name: tests
      env:
        CTEST_OUTPUT_ON_FAILURE: ON
      run: |
        ccache --max-size=100M
        make release-test -j3
